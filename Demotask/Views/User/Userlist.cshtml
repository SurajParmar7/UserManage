@model UserManage.entities.Viewmodels.UserAddview




<h4 style="margin-top:30px">User List</h4>
<div style="display:flex;margin-top: 50px;">
<div class="rounded" style="width:30%">
    <input type="search" class="form-control rounded" placeholder="Search using firstnmae,lastname & Email" aria-label="Search" aria-describedby="search-addon" id="SearchForUser" />
</div>
<div style="width:66%;text-align: -webkit-right;">
<select id="PageSize" class="form-select" aria-label="Default select example" style="width:10%">
  <option selected>Page Size</option>
  <option value="5">5</option>
  <option value="10">10</option>
  <option value="12">12</option>
</select>
</div>

@*<a style="text-align: end;" onclick="return location.href='@Url.Action("UserAdd","User" )'"  class="nav-link align-middle px-0"><p>UserAdd</p></a>*@
<div style="text-align: right;width: 7%">
<button type="button" class="btn btn-primary" data-bs-toggle="modal" onclick="addUserbtn()" data-bs-target="#exampleModal" >Add User </button>
</div>
</div>


@*---- Add Model ---*@
<div class="modal fade " id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Add User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>    
  
        <form id="add-user" class="needs-validation" autocomplete="off">

    <div class="modal-body">
        <div class="mb-3">


            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">First Name:</label>
                <input asp-for="@Model.FirstName" name="FirstName" type="text" class="form-control" >
                <p><span asp-validation-for="@Model.FirstName" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Last Name:</label>
                <input asp-for="@Model.LastName" name="LastName" type="text" class="form-control" >
                <p><span asp-validation-for="LastName" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Phone Number:</label>
                <input asp-for="@Model.Phone" type="text" class="form-control" >
                <p><span asp-validation-for="Phone" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Email Address:</label>
                <input asp-for="@Model.Email" type="text" class="form-control" >
                <p><span asp-validation-for="Email" id="email-error" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Password:</label>
                <input asp-for="@Model.Password" type="password" class="form-control">
                <p><span asp-validation-for="Password" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">StreetAddress:</label>
                <input asp-for="@Model.StreetAddress" name="StreetAddress" type="text" class="form-control" >
                <p><span asp-validation-for="StreetAddress" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">UserName:</label>
                <input asp-for="@Model.Username"  type="text" class="form-control" >
                <p><span asp-validation-for="Username" id="username-error" class="text-danger"></span></p>

            </div>

            <div class="col">
                <label for="recipient-name" class="col-form-label">State:</label>
                <select asp-for=" @Model.State" class="form-select statedropdown"  aria-label="default select example">
                    <option selected>select your State</option>
                </select>
            </div>
            <div class="col">
                <label for="recipient-name" class="col-form-label">City</label>
                <select asp-for=" @Model.City" class="form-select citydropdown" aria-label="default select example">
                    <option selected>select your City</option>
                </select>
            </div>


        </div>
    </div>
     <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary" id="adduser">Save</button>
      </div>
    @*<div class="modal-footer">
        <button type="button"><span >Close</span></button>
        <button type="submit"><span >Save</span></button>
    </div>*@
</form>
     
     
    </div>
  </div>
</div>

@*
-------edit modal---------*@

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog  modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Edit User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
  
        <form id="edit-user" class="needs-validation" autocomplete="off">

    <div class="modal-body">
        <div class="mb-3">


            <div class="mb-3">
                 <input asp-for="@Model.UserId" type="hidden" id="user-id" class="form-control">
                <label for="recipient-name" class="col-form-label">First Name:</label>
                <input asp-for="@Model.FirstName" name="FirstName" type="text" class="form-control" id="aFirstName">
                <p><span asp-validation-for="@Model.FirstName" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Last Name:</label>
                <input asp-for="@Model.LastName" name="LastName" type="text" class="form-control" id="aLastName">
                <p><span asp-validation-for="LastName" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Phone Number:</label>
                <input asp-for="@Model.Phone" type="text" class="form-control" id="aPhoneNo">
                <p><span asp-validation-for="Phone" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Email Address:</label>
                <input asp-for="@Model.Email" type="text" class="form-control" id="aEmail">
                <p><span asp-validation-for="Email" id="email1-error" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">Password:</label>
                <input asp-for="@Model.Password" type="password" class="form-control" id="apassword">
                <p><span asp-validation-for="Password" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">StreetAddress:</label>
                <input asp-for="@Model.StreetAddress" name="StreetAddress" type="text" id="aSreetadress" class="form-control" >
                <p><span asp-validation-for="StreetAddress" class="text-danger"></span></p>

            </div>
            <div class="mb-3">
                <label for="recipient-name" class="col-form-label">UserName:</label>
                <input asp-for="@Model.Username"  type="text" class="form-control" id="ausername">
                <p><span asp-validation-for="Username" id="username1-error" class="text-danger"></span></p>

            </div>

            <div class="col">
                <label for="recipient-name" class="col-form-label">State:</label>
                <select asp-for=" @Model.State" class="form-select statedropdown" id="ddlstate" aria-label="default select example">
                    <option selected>select your State</option>
                </select>
            </div>
            <div class="col">
                <label for="recipient-name" class="col-form-label">City</label>
                <select asp-for=" @Model.City" class="form-select citydropdown" id="ddlcity" aria-label="default select example">
                    <option selected>select your City</option>
                </select>
            </div>


        </div>
    </div>
     <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary" id="edituser1">Save</button>
      </div>
    @*<div class="modal-footer">
        <button type="button"><span >Close</span></button>
        <button type="submit"><span >Save</span></button>
    </div>*@
</form>
     
     
    </div>
  </div>
</div>

<div id="UserListing" style="margin-top:33px">
   
</div>
<script>

//----Search and listing-----


 $(document).ready(function () {
    userlist();
    $("#SearchForUser").on("keyup", function (e) {
        var searchUser = $(this).val();
        if (searchUser.length > 3) {
            performSearch(searchUser);
        } else if (searchUser.length <= 3) {
            userlist();
        }
    });

    function performSearch(searchUser) {
        $.ajax({
            type: "GET",
            dataType: "html",
            url: "/User/Userlisting",
            data: { search: searchUser },
            success: function (data) {
                $("#UserListing").html("");
                $("#UserListing").html(data);
            },
            error: function () {
                alert("Something went wrong in adding data");
            }
        });
    }
});

function userlist() {
    $.ajax({
        type: "GET",
        dataType: "html",
        url: "/User/Userlisting",
        success: function (data) {
            $("#UserListing").html("");
            $("#UserListing").html(data);
            $('#exampleModal').hide();
            $('.modal-backdrop.fade.show').hide();
        },
        error: function () {
            alert("Something went wrong in User");
        }
    });
}

$(document).ready(function () {
    $.ajax({
        url: '/User/listOfState',
        type: 'GET',
        dataType: 'json',
        success: function (data) {
            var stateDropdown = $('.statedropdown');
            stateDropdown.empty();
            stateDropdown.append($('<option>').text('Select your State').attr('value', ''));
            $.each(data, function (index, state) {
                stateDropdown.append($('<option>').text(state.stateName).attr('value', state.stateId));
            });
        },
        error: function () {
            alert('Error occurred while retrieving states.');
        }
    });
});


$(document).ready(function () {

    $('.statedropdown').change(function () {
        var stateId = $(this).val();


        $.ajax({
            url: '/User/GetCities',
            type: 'GET',
            data: { stateId: stateId },
            success: function (cities) {

                $('.citydropdown').empty();
                $('.citydropdown').append($('<option>').text('Select your city').attr('value', ''));

                $.each(cities, function (index, city) {
                    $('.citydropdown').append($('<option></option>').val(city.cityId).text(city.cityName));
                });
            },
            error: function () {

                alert('Error occurred while retrieving cities.');
            }
        });
    });
});
//----add---
function addUserbtn() {

    $('#add-user')[0].reset();
    $("#adduser").text("Save");
    $("#email-error").text("");
    $("#username-error").text("");
    $('.modal-backdrop.fade.show').show();
    var validationMessages = document.querySelectorAll(".text-danger");
    validationMessages.forEach(function (message) {
        message.textContent = "";
    });

}

//$(document).ready(function() {
$("#adduser").on("click", function (event) {
    event.preventDefault();
    addUser();
});

function addUser() {
    if ($("#add-user").valid()) {
        var data = $("#add-user").serialize();

        $.ajax({
            type: 'POST',
            url: '/User/UserAdd',
            data: data,
            success: function (result) {
                if (result == "email") {
                    var error = "Email already exists";
                    $("#email-error").text(error);
                }
                else if (result == "username") {
                    var error = "Username already exists";
                    $("#username-error").text(error);
                }
                else if (result == "add") {
                    toastr.success("User added successfully");
                    userlist();
                }
            },
            error: function () {

            }
        });
    }
}

//});

//------Edit------

function editUser(userid) {
    $.ajax({
        type: "GET",
        url: '/User/UserEdit',
        dataType: "json",
        data: { id: userid },
        success: function (response) {
            $('.modal-backdrop.fade.show').show();
            var validationMessages = document.querySelectorAll(".text-danger");
            validationMessages.forEach(function (message) {
                message.textContent = "";
            });

            $("#ddlstate").val(response.state);
            $("#ddlcity").empty(); 

           
            $("#ausername").val(response.username);
            $("#aSreetadress").val(response.streetAddress);
            $("#apassword").val(response.password);
            $("#aEmail").val(response.email);
            $("#aPhoneNo").val(response.phone);
            $("#aFirstName").val(response.firstName);
            $("#aLastName").val(response.lastName);
            $("#user-id").val(response.userId);

            
            $.ajax({
                url: '/User/GetCities',
                type: 'GET',
                data: { stateId: response.state },
                success: function (cities) {

                     $('.citydropdown').empty();
                     $('.citydropdown').append($('<option>').text('Select your city').attr('value', ''));
                    $.each(cities, function (index, city) {
                        $("#ddlcity").append($('<option></option>').val(city.cityId).text(city.cityName));
                    });

                    
                    $("#ddlcity").val(response.city);

                },
                error: function () {
                    alert('Error occurred while retrieving cities.');
                }
            });
        }
    });
}


$("#edituser1").on("click", function (event) {
    event.preventDefault();
    updateUser();
});


function updateUser() {
    if ($("#edit-user").valid()) {
        var data = $("#edit-user").serialize();

        $.ajax({
            type: 'POST',
            url: '/User/UserEdit',
            
            data: data,
            success: function (result) {

                if (result == "edit") {

                    toastr.success("User edited successfully");
                    userlist();
                    $('#editModal').hide();
                }


            },
            error: function () {

            }
        })
    }
};

 
</script>